#' Performs a QTL enrichment analysis based in a Bootstrap simulation for each QTL class 
#' 
#' Takes the output from find_genes_qtls_around_markers and run a QTL enrichment analysis 
#' @param qtl_db The .gff file that can be downloaded from Animal QTlLdb
#' @param qtl_file The output from find_genes_qtls_around_markers function
#' @param qtl_type A character indicating which type of enrichment will be performed. QTL_type indicates that the enrichment processes will be performed for the QTL classes, while trait indicates that the enrichment analysis will be performed for each trait individually.
#' @param enrich_type A character indicating if the enrichment analysis will be performed for all the chromosomes ("genome") or for a subset of chromosomes ("chromosome). If the "genome" option is selected, the results reported are the merge of all chromosomes. 
#' @param chr.subset If enrich_type equal "chromosome", it is possible to define a subset of chromosomes to be analyzed. The default is equal NULL. Therefore, all the chromosomes will be analyzed.
#' @param n.it number of iterations for the bootstrap simulation.
#' @param nThreads The number of threads used.
#' @param padj The alogorithm for multiple testing correction to be adopted ("holm", "hochberg", "hommel", "bonferroni", "BH", "BY","fdr", "none").
#' @param parallel The type of parallel operation to be used.
#' @return A data frame with the p-value for th enrichment result
#' @importFrom utils read.delim
#' @importFrom stats p.adjust
#' @importFrom stats sd
#' @importFrom parallel detectCores
#' @importFrom dynamicTreeCut printFlush
#' @importFrom doParallel registerDoParallel
#' @importFrom boot boot
#' @export